title: "Basic JOIN: Connecting Pokemon and Trainers"
description: |
  Welcome to intermediate challenges! Now that you've mastered the basics, it's time to level up your SQL skills by connecting different tables together.
  
  In the Pokemon world, Pokemon and Trainers have their own information stored in separate tables, but they're connected by relationships. A JOIN clause allows you to combine rows from two or more tables based on a related column between them.
  
  The basic JOIN syntax (specifically an INNER JOIN) is:
  ```sql
  SELECT column(s)
  FROM table1
  JOIN table2 ON table1.column = table2.column;
  ```
  
  For example, to find out which Trainer owns which Pokemon:
  ```sql
  SELECT
      t.name AS trainer_name,
      p.name AS pokemon_name
  FROM
      trainers t
      JOIN pokemon p ON t.trainer_id = p.trainer_id;
  ```
  
  The JOIN in this example is actually an INNER JOIN, which only returns rows when there is a match in both tables. This is the most common type of JOIN and is the default when you just write JOIN.

difficulty: "intermediate"

setup:
  - file: "setup.sql"

challenge:
  task: |
    Professor Oak needs a report about Pokemon and their Trainers for his research!
    
    Write a query that:
    1. Joins the `pokemon` and `trainers` tables
    2. Returns the Pokemon name, type, CP, and the name of their Trainer
    3. Orders the results by Trainer name alphabetically, and then by Pokemon CP in descending order
    
    This will help Professor Oak understand which Trainers have which Pokemon and how strong they are.
  
  expected_columns:
    - "pokemon_name"
    - "type"
    - "cp"
    - "trainer_name"
  
  validation:
    type: "result_set"
    file: "solution.sql"
  
  hints:
    - "Use JOIN to connect the pokemon and trainers tables based on the trainer_id columns."
    - "Remember to use aliases for your columns to make the output clearer."
    - "Order the results first by trainer_name and then by cp DESC."
