title: "Pokemon Relationships: Mastering JOINs"
description: |
  This challenge introduces one of the most important SQL concepts: table joins, which in the world of Pokemon is like connecting different Pokedex entries together!
  
  Joins allow you to combine data from multiple tables based on related columns, much like how a complete Pokedex links Pokemon with their evolutions, moves, and habitats.
  This is fundamental to relational databases, where data is often split across
  different tables to avoid redundancy.
  
  The basic syntax for an INNER JOIN is:
  ```sql
  SELECT column1, column2, ...
  FROM table1
  INNER JOIN table2 ON table1.common_column = table2.common_column;
  ```
  
  In this challenge, you'll work with Pokemon and their trainers from across different regions.

difficulty: "intermediate"

# Database setup
setup:
  - file: "setup.sql"

# Challenge details  
challenge:
  task: |
    Professor Oak needs your help tracking Pokemon ownership! Write a query that returns:
    - The purchase ID
    - The purchase date
    - The pokecoin amount spent
    - The name of the shop and its location combined (like "Poke Mart in Viridian City")
    
    Join the 'item_purchases' table with the 'shops' table to get this information.
  
  expected_columns:
    - "purchase_id"
    - "purchase_date"
    - "pokecoin_amount"
    - "shop_details"
  
  validation:
    type: "result_set"
    file: "solution.sql"
  
  hints:
    - "Use the INNER JOIN keyword to join the tables, just like how a Pokemon links to its evolutions!"
    - "The common column between the tables is shop_id, similar to how a trainer_id connects a trainer to their Pokemon."
    - "To combine shop_name and location, use the concatenation operator (||) with ' in ' between them."
